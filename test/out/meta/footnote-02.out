--- parse tree ---
[ Code
    "test/typ/meta/footnote-02.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/meta/footnote-02.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/meta/footnote-02.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Text "First"
, Space
, HardBreak
, Text "Second"
, Space
, Code
    "test/typ/meta/footnote-02.typ"
    ( line 4 , column 9 )
    (FuncCall
       (Ident (Identifier "footnote"))
       [ BlockArg
           [ Text "A,"
           , Space
           , Code
               "test/typ/meta/footnote-02.typ"
               ( line 4 , column 22 )
               (FuncCall
                  (Ident (Identifier "footnote"))
                  [ BlockArg
                      [ Text "B,"
                      , Space
                      , Code
                          "test/typ/meta/footnote-02.typ"
                          ( line 4 , column 35 )
                          (FuncCall
                             (Ident (Identifier "footnote")) [ BlockArg [ Text "C" ] ])
                      ]
                  ])
           ]
       ])
, Space
, HardBreak
, Text "Third"
, Space
, Code
    "test/typ/meta/footnote-02.typ"
    ( line 5 , column 8 )
    (FuncCall
       (Ident (Identifier "footnote"))
       [ BlockArg
           [ Text "D,"
           , Space
           , Code
               "test/typ/meta/footnote-02.typ"
               ( line 5 , column 21 )
               (FuncCall
                  (Ident (Identifier "footnote")) [ BlockArg [ Text "E" ] ])
           ]
       ])
, Space
, HardBreak
, Text "Fourth"
, ParBreak
]
--- evaluated ---
{ [
], 
  [First ], 
  linebreak(), 
  [Second ], 
  footnote(body: { [A, ], 
                   footnote(body: { [B, ], 
                                    footnote(body: [C]) }) }), 
  [ ], 
  linebreak(), 
  [Third ], 
  footnote(body: { [D, ], 
                   footnote(body: [E]) }), 
  [ ], 
  linebreak(), 
  [Fourth], 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Str "First"
      , LineBreak
      , Str "Second"
      , Space
      , Note
          [ Para
              [ Str "A,"
              , Space
              , Note [ Para [ Str "B," , Space , Note [ Para [ Str "C" ] ] ] ]
              ]
          ]
      , LineBreak
      , Str "Third"
      , Space
      , Note [ Para [ Str "D," , Space , Note [ Para [ Str "E" ] ] ] ]
      , LineBreak
      , Str "Fourth"
      ]
  ]
