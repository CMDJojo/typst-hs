--- parse tree ---
[ Code
    "test/typ/meta/link-08.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/meta/link-08.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/meta/link-08.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/meta/link-08.typ"
    ( line 3 , column 2 )
    (FuncCall
       (Ident (Identifier "link"))
       [ NormalArg
           (Dict
              [ ( Identifier "page" , Literal (Int 1) )
              , ( Identifier "x" , Literal (Numeric 10.0 Pt) )
              , ( Identifier "y" , Literal (Numeric 20.0 Pt) )
              ])
       , BlockArg
           [ Text "Back"
           , Space
           , Text "to"
           , Space
           , Text "the"
           , Space
           , Text "start"
           ]
       ])
, ParBreak
]
--- evaluated ---
{ [
], 
  link(body: [Back to the start], 
       dest: (page: 1,
              x: 10.0pt,
              y: 20.0pt)), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Link
          ( "" , [] , [] )
          [ Str "Back"
          , Space
          , Str "to"
          , Space
          , Str "the"
          , Space
          , Str "start"
          ]
          ( "#" , "" )
      ]
  ]
