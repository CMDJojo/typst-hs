--- parse tree ---
[ Code
    "test/typ/meta/ref-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/meta/ref-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/meta/ref-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Code
    "test/typ/meta/ref-00.typ"
    ( line 2 , column 2 )
    (Set
       (Ident (Identifier "heading"))
       [ KeyValArg (Identifier "numbering") (Literal (String "1.")) ])
, ParBreak
, Heading
    1
    [ Text "Introduction"
    , Space
    , Code
        "test/typ/meta/ref-00.typ" ( line 4 , column 16 ) (Label "intro")
    ]
, Text "See"
, Space
, Ref "setup" (Literal Auto)
, Text "."
, ParBreak
, Heading
    2
    [ Text "Setup"
    , Space
    , Code
        "test/typ/meta/ref-00.typ" ( line 7 , column 10 ) (Label "setup")
    ]
, Text "As"
, Space
, Text "seen"
, Space
, Text "in"
, Space
, Ref "intro" (Literal Auto)
, Text ","
, Space
, Text "we"
, Space
, Text "proceed"
, Text "."
, ParBreak
]
--- evaluated ---
{ text(body: [
]), 
  parbreak(), 
  heading(body: { text(body: [Introduction ]), 
                  text(body: []) }, 
          level: 1, 
          numbering: "1."), 
  text(body: [See ]), 
  ref(supplement: auto, 
      target: ), 
  text(body: [.]), 
  parbreak(), 
  heading(body: { text(body: [Setup ]), 
                  text(body: []) }, 
          level: 2, 
          numbering: "1."), 
  text(body: [As seen in ]), 
  ref(supplement: auto, 
      target: ), 
  text(body: [, we proceed.]), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Header 1 ( "" , [] , [] ) [ Str "Introduction" , Space ]
  , Para
      [ Str "See"
      , Space
      , Link ( "" , [ "ref" ] , [] ) [ Str "[setup]" ] ( "#setup" , "" )
      , Str "."
      ]
  , Header 2 ( "" , [] , [] ) [ Str "Setup" , Space ]
  , Para
      [ Str "As"
      , Space
      , Str "seen"
      , Space
      , Str "in"
      , Space
      , Link ( "" , [ "ref" ] , [] ) [ Str "[intro]" ] ( "#intro" , "" )
      , Str ","
      , Space
      , Str "we"
      , Space
      , Str "proceed."
      ]
  ]
