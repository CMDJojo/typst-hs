--- parse tree ---
[ Code
    "test/typ/compute/construct-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/compute/construct-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compute/construct-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Comment
, Code
    "test/typ/compute/construct-01.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "stack"))
       [ KeyValArg (Identifier "dir") (Ident (Identifier "ltr"))
       , NormalArg
           (FuncCall
              (Ident (Identifier "rect"))
              [ KeyValArg
                  (Identifier "fill")
                  (FuncCall
                     (Ident (Identifier "luma")) [ NormalArg (Literal (Int 0)) ])
              ])
       , NormalArg
           (FuncCall
              (Ident (Identifier "rect"))
              [ KeyValArg
                  (Identifier "fill")
                  (FuncCall
                     (Ident (Identifier "luma"))
                     [ NormalArg (Literal (Numeric 80.0 Percent)) ])
              ])
       ])
, ParBreak
]
--- evaluated ---
{ [
], 
  stack(children: (rect(body: none, 
                        fill: luma(0%)), 
                   rect(body: none, 
                        fill: luma(80%))), 
        dir: ltr), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Div
      ( "" , [] , [ ( "stack" , "ltr" ) ] )
      [ Div ( "" , [] , [] ) [ Div ( "" , [ "rect" ] , [] ) [] ]
      , Div ( "" , [] , [] ) [ Div ( "" , [ "rect" ] , [] ) [] ]
      ]
  ]
