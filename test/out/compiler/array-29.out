--- parse tree ---
[ Code
    "test/typ/compiler/array-29.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/compiler/array-29.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/array-29.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/array-29.typ"
    ( line 3 , column 2 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg
           (FuncCall (FieldAccess (Ident (Identifier "join")) (Array [])) [])
       , NormalArg (Literal None)
       ])
, SoftBreak
, Code
    "test/typ/compiler/array-29.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg
           (FuncCall
              (FieldAccess
                 (Ident (Identifier "join")) (Array [ Literal (Int 1) ]))
              [])
       , NormalArg (Literal (Int 1))
       ])
, SoftBreak
, Code
    "test/typ/compiler/array-29.typ"
    ( line 5 , column 2 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg
           (FuncCall
              (FieldAccess
                 (Ident (Identifier "join"))
                 (Array
                    [ Literal (String "a")
                    , Literal (String "b")
                    , Literal (String "c")
                    ]))
              [])
       , NormalArg (Literal (String "abc"))
       ])
, SoftBreak
, Code
    "test/typ/compiler/array-29.typ"
    ( line 6 , column 2 )
    (FuncCall
       (Ident (Identifier "test"))
       [ NormalArg
           (Plus
              (Plus
                 (Literal (String "("))
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "join"))
                       (Array
                          [ Literal (String "a")
                          , Literal (String "b")
                          , Literal (String "c")
                          ]))
                    [ NormalArg (Literal (String ", ")) ]))
              (Literal (String ")")))
       , NormalArg (Literal (String "(a, b, c)"))
       ])
, ParBreak
]
--- evaluated ---
{ [
], 
  [✅], 
  [
], 
  [✅], 
  [
], 
  [✅], 
  [
], 
  [✅], 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Str "\9989"
      , SoftBreak
      , Str "\9989"
      , SoftBreak
      , Str "\9989"
      , SoftBreak
      , Str "\9989"
      ]
  ]
