--- parse tree ---
[ Code
    "test/typ/compiler/methods-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/compiler/methods-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/compiler/methods-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/compiler/methods-01.typ"
    ( line 3 , column 2 )
    (Block
       (CodeBlock
          [ Let
              (BasicBind (Just (Identifier "matrix")))
              (Array
                 [ Array [ Array [ Literal (Int 1) ] , Array [ Literal (Int 2) ] ]
                 , Array [ Array [ Literal (Int 3) ] , Array [ Literal (Int 4) ] ]
                 ])
          , FuncCall
              (FieldAccess
                 (Ident (Identifier "push"))
                 (FuncCall
                    (FieldAccess
                       (Ident (Identifier "at"))
                       (FuncCall
                          (FieldAccess
                             (Ident (Identifier "at")) (Ident (Identifier "matrix")))
                          [ NormalArg (Literal (Int 1)) ]))
                    [ NormalArg (Literal (Int 0)) ]))
              [ NormalArg (Literal (Int 5)) ]
          , FuncCall
              (Ident (Identifier "test"))
              [ NormalArg (Ident (Identifier "matrix"))
              , NormalArg
                  (Array
                     [ Array [ Array [ Literal (Int 1) ] , Array [ Literal (Int 2) ] ]
                     , Array
                         [ Array [ Literal (Int 3) , Literal (Int 5) ]
                         , Array [ Literal (Int 4) ]
                         ]
                     ])
              ]
          ]))
, ParBreak
]
"test/typ/compiler/methods-01.typ" (line 3, column 2):
named argument default not defined or Cannot update expression FuncCall (FieldAccess (Ident (Identifier "at")) (FuncCall (FieldAccess (Ident (Identifier "at")) (Ident (Identifier "matrix"))) [NormalArg (Literal (Int 1))])) [NormalArg (Literal (Int 0))]
