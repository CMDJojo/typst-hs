--- parse tree ---
[ Code
    "test/typ/bugs/flow-1-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/bugs/flow-1-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/bugs/flow-1-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Code
    "test/typ/bugs/flow-1-00.typ"
    ( line 2 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "height") (Literal (Numeric 70.0 Pt)) ])
, SoftBreak
, Code
    "test/typ/bugs/flow-1-00.typ"
    ( line 3 , column 2 )
    (FuncCall
       (Ident (Identifier "block"))
       [ BlockArg
           [ Text "This"
           , Space
           , Text "file"
           , Space
           , Text "tests"
           , Space
           , Text "a"
           , Space
           , Text "bug"
           , Space
           , Text "where"
           , Space
           , Text "an"
           , Space
           , Text "almost"
           , Space
           , Text "empty"
           , Space
           , Text "page"
           , Space
           , Text "occurs"
           , Text "."
           ]
       ])
, SoftBreak
, Code
    "test/typ/bugs/flow-1-00.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "block"))
       [ BlockArg
           [ SoftBreak
           , Text "The"
           , Space
           , Text "text"
           , Space
           , Text "in"
           , Space
           , Text "this"
           , Space
           , Text "second"
           , Space
           , Text "block"
           , Space
           , Text "was"
           , Space
           , Text "torn"
           , Space
           , Text "apart"
           , Space
           , Text "and"
           , Space
           , Text "split"
           , Space
           , Text "up"
           , Space
           , Text "for"
           , SoftBreak
           , Text "some"
           , Space
           , Text "reason"
           , Space
           , Text "beyond"
           , Space
           , Text "my"
           , Space
           , Text "knowledge"
           , Text "."
           , ParBreak
           ]
       ])
, ParBreak
]
--- evaluated ---
{ text(body: [
]), 
  text(body: [
]), 
  block(body: text(body: [This file tests a bug where an almost empty page occurs.])), 
  text(body: [
]), 
  block(body: { text(body: [
The text in this second block was torn apart and split up for
some reason beyond my knowledge.]), 
                parbreak() }), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Div
      ( "" , [] , [] )
      [ Para
          [ Str "This"
          , Space
          , Str "file"
          , Space
          , Str "tests"
          , Space
          , Str "a"
          , Space
          , Str "bug"
          , Space
          , Str "where"
          , Space
          , Str "an"
          , Space
          , Str "almost"
          , Space
          , Str "empty"
          , Space
          , Str "page"
          , Space
          , Str "occurs."
          ]
      ]
  , Para []
  , Div
      ( "" , [] , [] )
      [ Para
          [ Str "The"
          , Space
          , Str "text"
          , Space
          , Str "in"
          , Space
          , Str "this"
          , Space
          , Str "second"
          , Space
          , Str "block"
          , Space
          , Str "was"
          , Space
          , Str "torn"
          , Space
          , Str "apart"
          , Space
          , Str "and"
          , Space
          , Str "split"
          , Space
          , Str "up"
          , Space
          , Str "for"
          , SoftBreak
          , Str "some"
          , Space
          , Str "reason"
          , Space
          , Str "beyond"
          , Space
          , Str "my"
          , Space
          , Str "knowledge."
          ]
      ]
  ]
