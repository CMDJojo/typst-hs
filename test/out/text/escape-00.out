--- parse tree ---
[ Code
    "test/typ/text/escape-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/text/escape-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/text/escape-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Text "\\"
, Space
, Text "/"
, Space
, Text "["
, Space
, Text "]"
, Space
, Text "{"
, Space
, Text "}"
, Space
, Text "#"
, Space
, Text "*"
, Space
, Text "_"
, Space
, Text "+"
, Space
, Text "="
, Space
, Text "~"
, Space
, HardBreak
, Text "`"
, Space
, Text "$"
, Space
, Text "\""
, Space
, Text "'"
, Space
, Text "<"
, Space
, Text ">"
, Space
, Text "@"
, Space
, Text "("
, Space
, Text ")"
, Space
, Text "A"
, ParBreak
, Comment
, Text "("
, Space
, Text ")"
, Space
, Text ";"
, ParBreak
, Comment
, Text "/"
, Text "/"
, SoftBreak
, Text "/"
, Text "*"
, Space
, Text "*"
, Text "/"
, SoftBreak
, Text "/"
, Strong [ Space , Text "*" , Text "/" , Space ]
, ParBreak
, Comment
, Text "\127957"
, Space
, Text "="
, Text "="
, Space
, Text "\127957"
, ParBreak
, Comment
, Text "A"
, Space
, Text "vs"
, Text "."
, Space
, Text "\\"
, Text "u"
, Text "{"
, Text "41"
, Text "}"
, ParBreak
, Comment
, Text "let"
, Space
, Text "f"
, Text "("
, Text ")"
, Space
, Text ","
, Space
, Text ";"
, Space
, Text ":"
, Space
, Text "|"
, Space
, Text "+"
, Space
, Text "-"
, Space
, Text "/"
, Text "="
, Space
, Text "="
, Text "="
, Space
, Text "12"
, Space
, Quote '"'
, Text "string"
, Quote '"'
, ParBreak
, Comment
, Text "10"
, Text "."
, Space
, Text "May"
, ParBreak
]
--- evaluated ---
{ [
], 
  [\ / [ ] { } # * _ + = ~ ], 
  linebreak(), 
  [` $ " ' < > @ ( ) A], 
  parbreak(), 
  [( ) ;], 
  parbreak(), 
  [//
/* */
/], 
  strong(body: [ */ ]), 
  parbreak(), 
  [üèï == üèï], 
  parbreak(), 
  [A vs. \u{41}], 
  parbreak(), 
  [let f() , ; : | + - /= == 12 ‚Äústring‚Äù], 
  parbreak(), 
  [10. May], 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Str "\\"
      , Space
      , Str "/"
      , Space
      , Str "["
      , Space
      , Str "]"
      , Space
      , Str "{"
      , Space
      , Str "}"
      , Space
      , Str "#"
      , Space
      , Str "*"
      , Space
      , Str "_"
      , Space
      , Str "+"
      , Space
      , Str "="
      , Space
      , Str "~"
      , LineBreak
      , Str "`"
      , Space
      , Str "$"
      , Space
      , Str "\""
      , Space
      , Str "'"
      , Space
      , Str "<"
      , Space
      , Str ">"
      , Space
      , Str "@"
      , Space
      , Str "("
      , Space
      , Str ")"
      , Space
      , Str "A"
      ]
  , Para [ Str "(" , Space , Str ")" , Space , Str ";" ]
  , Para
      [ Str "//"
      , SoftBreak
      , Str "/*"
      , Space
      , Str "*/"
      , SoftBreak
      , Str "/"
      , Strong [ Space , Str "*/" , Space ]
      ]
  , Para [ Str "\127957" , Space , Str "==" , Space , Str "\127957" ]
  , Para [ Str "A" , Space , Str "vs." , Space , Str "\\u{41}" ]
  , Para
      [ Str "let"
      , Space
      , Str "f()"
      , Space
      , Str ","
      , Space
      , Str ";"
      , Space
      , Str ":"
      , Space
      , Str "|"
      , Space
      , Str "+"
      , Space
      , Str "-"
      , Space
      , Str "/="
      , Space
      , Str "=="
      , Space
      , Str "12"
      , Space
      , Str "\8220string\8221"
      ]
  , Para [ Str "10." , Space , Str "May" ]
  ]
