--- parse tree ---
[ Code
    "test/typ/math/frac-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/frac-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/frac-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ MFrac
        (MGroup
           (Just "(")
           (Just ")")
           [ MGroup (Just "|") (Just "|") [ Text "x" ]
           , Text "+"
           , MGroup (Just "|") (Just "|") [ Text "y" ]
           ])
        (Text "2")
    , Text "<"
    , MFrac
        (MGroup (Just "[") (Just "]") [ Text "1" , Text "+" , Text "2" ])
        (Text "3")
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: { math.frac(denom: [2], 
                                  num: { math.lr(body: ({ [|], 
                                                          [x], 
                                                          [|] })), 
                                         [+], 
                                         math.lr(body: ({ [|], 
                                                          [y], 
                                                          [|] })) }), 
                        [<], 
                        math.frac(denom: [3], 
                                  num: math.lr(body: ({ [[], 
                                                        [1], 
                                                        [+], 
                                                        [2], 
                                                        []] }))) }, 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\frac{|x| + |y|}{2} < \\frac{\\lbrack 1 + 2\\rbrack}{3}"
      ]
  ]
