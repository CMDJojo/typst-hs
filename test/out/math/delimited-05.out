--- parse tree ---
[ Code
    "test/typ/math/delimited-05.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/delimited-05.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/delimited-05.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ Code
        "test/typ/math/delimited-05.typ"
        ( line 3 , column 3 )
        (FuncCall
           (Ident (Identifier "lr"))
           [ NormalArg
               (Block (Content [ MFrac (Text "a") (Text "b") , Text "]" ]))
           ])
    , Text "="
    , Text "a"
    , Text "="
    , Code
        "test/typ/math/delimited-05.typ"
        ( line 3 , column 19 )
        (FuncCall
           (Ident (Identifier "lr"))
           [ NormalArg
               (Block (Content [ Text "{" , MFrac (Text "a") (Text "b") ]))
           ])
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: { math.lr(body: { math.frac(denom: [b], 
                                                  num: [a]), 
                                        []] }), 
                        [=], 
                        [a], 
                        [=], 
                        math.lr(body: { [{], 
                                        math.frac(denom: [b], 
                                                  num: [a]) }) }, 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\left. \\frac{a}{b} \\right\\rbrack = a = \\left\\{ \\frac{a}{b} \\right."
      ]
  ]
