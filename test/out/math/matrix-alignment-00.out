--- parse tree ---
[ Code
    "test/typ/math/matrix-alignment-00.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/math/matrix-alignment-00.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/matrix-alignment-00.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ Code
        "test/typ/math/matrix-alignment-00.typ"
        ( line 3 , column 3 )
        (FuncCall
           (Ident (Identifier "vec"))
           [ NormalArg
               (Block
                  (Content
                     [ Text " a "
                     , MAlignPoint
                     , Text " a a a "
                     , MAlignPoint
                     , Text " a a"
                     ]))
           , NormalArg
               (Block
                  (Content
                     [ Text " a a "
                     , MAlignPoint
                     , Text " a a "
                     , MAlignPoint
                     , Text " a"
                     ]))
           , NormalArg
               (Block
                  (Content
                     [ Text " a a a "
                     , MAlignPoint
                     , Text " a "
                     , MAlignPoint
                     , Text " a a a"
                     ]))
           ])
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: math.vec(children: ({ [ a ], 
                                            math.alignpoint(), 
                                            [ a a a ], 
                                            math.alignpoint(), 
                                            [ a a] }, 
                                          { [ a a ], 
                                            math.alignpoint(), 
                                            [ a a ], 
                                            math.alignpoint(), 
                                            [ a] }, 
                                          { [ a a a ], 
                                            math.alignpoint(), 
                                            [ a ], 
                                            math.alignpoint(), 
                                            [ a a a] })), 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\begin{pmatrix}\n\\begin{array}{rlr}\n\\text{ a } & \\text{ a a a } & \\text{ a a}\n\\end{array} \\\\\n\\begin{array}{rlr}\n\\text{ a a } & \\text{ a a } & \\text{ a}\n\\end{array} \\\\\n\\begin{array}{rlr}\n\\text{ a a a } & \\text{ a } & \\text{ a a a}\n\\end{array}\n\\end{pmatrix}"
      ]
  ]
