--- parse tree ---
[ Code
    "test/typ/math/attach-06.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/math/attach-06.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/attach-06.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ MAttach
        Nothing
        (Just (Text "n"))
        (MGroup (Just "(") (Just ")") [ Text "-" , Text "1" ])
    , Text "+"
    , MAttach
        Nothing
        (Just
           (MGroup
              Nothing Nothing [ Text "-" , MFrac (Text "1") (Text "2") ]))
        (MGroup
           (Just "(")
           (Just ")")
           [ MFrac (Text "1") (Text "2") , Text "+" , Text "3" ])
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: { math.attach(b: none, 
                                    base: math.lr(body: { [(], 
                                                          [-], 
                                                          [1], 
                                                          [)] }), 
                                    t: [n]), 
                        [+], 
                        math.attach(b: none, 
                                    base: math.lr(body: { [(], 
                                                          math.frac(denom: [2], 
                                                                    num: [1]), 
                                                          [+], 
                                                          [3], 
                                                          [)] }), 
                                    t: { [-], 
                                         math.frac(denom: [2], 
                                                   num: [1]) }) }, 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\left( {- 1} \\right)^{n} + \\left( {\\frac{1}{2} + 3} \\right)^{- \\frac{1}{2}}"
      ]
  ]
