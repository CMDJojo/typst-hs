--- parse tree ---
[ Code
    "test/typ/math/delimited-03.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/delimited-03.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/delimited-03.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ MGroup (Just "|") (Just "|") [ Text "x" , Text "+" ]
    , Text "y"
    , MGroup
        (Just "|") (Just "|") [ Text "+" , MFrac (Text "z") (Text "a") ]
    , HardBreak
    , MGroup
        (Just "|")
        (Just "|")
        [ Text "x"
        , Text "+"
        , Code
            "test/typ/math/delimited-03.typ"
            ( line 4 , column 8 )
            (FuncCall
               (Ident (Identifier "lr"))
               [ BlockArg [ MGroup (Just "|") (Just "|") [ Text "y" ] ] ])
        , Text "+"
        , MFrac (Text "z") (Text "a")
        ]
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: { math.lr(body: { [|], 
                                        [x], 
                                        [+], 
                                        [|] }), 
                        [y], 
                        math.lr(body: { [|], 
                                        [+], 
                                        math.frac(denom: [a], 
                                                  num: [z]), 
                                        [|] }), 
                        linebreak(), 
                        math.lr(body: { [|], 
                                        [x], 
                                        [+], 
                                        math.lr(body: math.lr(body: { [|], 
                                                                      [y], 
                                                                      [|] })), 
                                        [+], 
                                        math.frac(denom: [a], 
                                                  num: [z]), 
                                        [|] }) }, 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\begin{array}{r}\n\\left| {x +} \\right|y\\left| {+ \\frac{z}{a}} \\right| \\\\\n\\left| {x + \\left. |y| \\right. + \\frac{z}{a}} \\right|\n\\end{array}"
      ]
  ]
