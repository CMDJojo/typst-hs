--- parse tree ---
[ Code
    "test/typ/math/matrix-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/math/matrix-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/matrix-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ Code
        "test/typ/math/matrix-01.typ"
        ( line 3 , column 3 )
        (FuncCall
           (Ident (Identifier "mat"))
           [ ArrayArg
               [ [ Text "1" , Text "2" , Text "\8230" , Text "10" ]
               , [ Text "2" , Text "2" , Text "\8230" , Text "10" ]
               , [ Code
                     "test/typ/math/matrix-01.typ"
                     ( line 6 , column 3 )
                     (FieldAccess (Ident (Identifier "v")) (Ident (Identifier "dots")))
                 , Code
                     "test/typ/math/matrix-01.typ"
                     ( line 6 , column 11 )
                     (FieldAccess (Ident (Identifier "v")) (Ident (Identifier "dots")))
                 , Code
                     "test/typ/math/matrix-01.typ"
                     ( line 6 , column 19 )
                     (FieldAccess
                        (Ident (Identifier "down")) (Ident (Identifier "dots")))
                 , Code
                     "test/typ/math/matrix-01.typ"
                     ( line 6 , column 30 )
                     (FieldAccess (Ident (Identifier "v")) (Ident (Identifier "dots")))
                 ]
               , [ Text "10" , Text "10" , Text "\8230" , Text "10" ]
               ]
           ])
    ]
, ParBreak
]
--- evaluated ---
{ [
], 
  math.equation(block: true, 
                body: math.mat(rows: (([1], 
                                       [2], 
                                       […], 
                                       [10]), 
                                      ([2], 
                                       [2], 
                                       […], 
                                       [10]), 
                                      ([⋮], [⋮], [⋱], [⋮]), 
                                      ([10], 
                                       [10], 
                                       […], 
                                       [10]))), 
                numbering: none), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para
      [ Math
          DisplayMath
          "\\begin{pmatrix}\n1 & 2 & \\ldots & 10 \\\\\n2 & 2 & \\ldots & 10 \\\\\n \\vdots & \\vdots & \\ddots & \\vdots \\\\\n10 & 10 & \\ldots & 10\n\\end{pmatrix}"
      ]
  ]
