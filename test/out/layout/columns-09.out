--- parse tree ---
[ Code
    "test/typ/layout/columns-09.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/columns-09.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/columns-09.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/columns-09.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "height") (Literal Auto)
       , KeyValArg (Identifier "width") (Literal (Numeric 7.05 Cm))
       , KeyValArg (Identifier "columns") (Literal (Int 1))
       ])
, ParBreak
, Text "This"
, Space
, Text "is"
, Space
, Text "a"
, Space
, Text "normal"
, Space
, Text "page"
, Text "."
, Space
, Text "Very"
, Space
, Text "normal"
, Text "."
, ParBreak
]
--- evaluated ---
{ [
], 
  parbreak(), 
  [This is a normal page. Very normal.], 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Para
      [ Str "This"
      , Space
      , Str "is"
      , Space
      , Str "a"
      , Space
      , Str "normal"
      , Space
      , Str "page."
      , Space
      , Str "Very"
      , Space
      , Str "normal."
      ]
  ]
