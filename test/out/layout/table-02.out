--- parse tree ---
[ Code
    "test/typ/layout/table-02.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/table-02.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/table-02.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/table-02.typ"
    ( line 3 , column 2 )
    (FuncCall
       (Ident (Identifier "table"))
       [ KeyValArg
           (Identifier "columns")
           (Array
              [ Literal (Numeric 1.0 Fr)
              , Literal (Numeric 1.0 Fr)
              , Literal (Numeric 1.0 Fr)
              ])
       , KeyValArg
           (Identifier "align")
           (Array
              [ Ident (Identifier "left")
              , Ident (Identifier "center")
              , Ident (Identifier "right")
              ])
       , NormalArg (Block (Content [ Text "A" ]))
       , NormalArg (Block (Content [ Text "B" ]))
       , NormalArg (Block (Content [ Text "C" ]))
       ])
, ParBreak
, Comment
, Code
    "test/typ/layout/table-02.typ"
    ( line 10 , column 2 )
    (Set
       (Ident (Identifier "align"))
       [ NormalArg (Ident (Identifier "center")) ])
, SoftBreak
, Code
    "test/typ/layout/table-02.typ"
    ( line 11 , column 2 )
    (FuncCall
       (Ident (Identifier "table"))
       [ KeyValArg
           (Identifier "columns")
           (Array
              [ Literal (Numeric 1.0 Fr)
              , Literal (Numeric 1.0 Fr)
              , Literal (Numeric 1.0 Fr)
              ])
       , KeyValArg (Identifier "align") (Array [])
       , NormalArg (Block (Content [ Text "A" ]))
       , NormalArg (Block (Content [ Text "B" ]))
       , NormalArg (Block (Content [ Text "C" ]))
       ])
, ParBreak
]
--- evaluated ---
{ [
], 
  table(align: (left, 
                center, 
                right), 
        children: ([A], [B], [C]), 
        columns: (1.0fr, 
                  1.0fr, 
                  1.0fr)), 
  parbreak(), 
  [
], 
  table(align: (), 
        children: ([A], [B], [C]), 
        columns: (1.0fr, 
                  1.0fr, 
                  1.0fr)), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignLeft , ColWidthDefault )
      , ( AlignCenter , ColWidthDefault )
      , ( AlignRight , ColWidthDefault )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "A" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "B" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "C" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para []
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "A" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "B" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "C" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  ]
