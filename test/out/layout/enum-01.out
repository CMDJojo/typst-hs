--- parse tree ---
[ Code
    "test/typ/layout/enum-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060("
                             , Code
                                 "test/typ/layout/enum-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/enum-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, EnumListItem (Just 0) [ Text "Before" , Space , Text "first!" ]
, SoftBreak
, EnumListItem
    (Just 1)
    [ Text "First"
    , Text "."
    , SoftBreak
    , EnumListItem (Just 2) [ Text "Indented" , SoftBreak ]
    ]
, SoftBreak
, EnumListItem Nothing [ Text "Second" , ParBreak ]
]
--- evaluated ---
{ [
], 
  enum(children: ([Before first!], 
                  { [First.
], 
                    enum(children: ([Indented
]), 
                         start: 2) }, 
                  { [Second], parbreak() }), 
       start: 0) }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , OrderedList
      ( 0 , DefaultStyle , DefaultDelim )
      [ [ Para [ Str "Before" , Space , Str "first!" ] ]
      , [ Para [ Str "First." ]
        , OrderedList
            ( 2 , DefaultStyle , DefaultDelim ) [ [ Para [ Str "Indented" ] ] ]
        ]
      , [ Para [ Str "Second" ] ]
      ]
  ]
