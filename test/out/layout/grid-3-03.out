--- parse tree ---
[ Code
    "test/typ/layout/grid-3-03.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/layout/grid-3-03.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/layout/grid-3-03.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Code
    "test/typ/layout/grid-3-03.typ"
    ( line 3 , column 2 )
    (Set
       (Ident (Identifier "page"))
       [ KeyValArg (Identifier "width") (Literal (Numeric 5.0 Cm))
       , KeyValArg (Identifier "height") (Literal (Numeric 2.25 Cm))
       ])
, SoftBreak
, Code
    "test/typ/layout/grid-3-03.typ"
    ( line 4 , column 2 )
    (FuncCall
       (Ident (Identifier "grid"))
       [ KeyValArg
           (Identifier "columns")
           (Times (Literal (Int 4)) (Array [ Literal (Numeric 1.0 Fr) ]))
       , KeyValArg (Identifier "row-gutter") (Literal (Numeric 10.0 Pt))
       , KeyValArg
           (Identifier "column-gutter")
           (Array
              [ Literal (Numeric 0.0 Pt) , Literal (Numeric 10.0 Percent) ])
       , NormalArg (Block (Content [ Text "A" ]))
       , NormalArg (Block (Content [ Text "B" ]))
       , NormalArg (Block (Content [ Text "C" ]))
       , NormalArg (Block (Content [ Text "D" ]))
       , NormalArg
           (FuncCall
              (Ident (Identifier "grid"))
              [ KeyValArg (Identifier "columns") (Literal (Int 2))
              , NormalArg (Block (Content [ Text "A" ]))
              , NormalArg (Block (Content [ Text "B" ]))
              , NormalArg
                  (Times
                     (Block (Content [ Text "C" , HardBreak ])) (Literal (Int 3)))
              , NormalArg (Block (Content [ Text "D" ]))
              ])
       , NormalArg
           (FuncCall
              (Ident (Identifier "align"))
              [ NormalArg (Ident (Identifier "top"))
              , NormalArg
                  (FuncCall
                     (Ident (Identifier "rect"))
                     [ KeyValArg (Identifier "inset") (Literal (Numeric 0.0 Pt))
                     , KeyValArg (Identifier "fill") (Ident (Identifier "eastern"))
                     , NormalArg
                         (FuncCall
                            (Ident (Identifier "align"))
                            [ NormalArg (Ident (Identifier "right"))
                            , BlockArg [ Text "LoL" ]
                            ])
                     ])
              ])
       , NormalArg (Block (Content [ Text "rofl" ]))
       , NormalArg
           (Times
              (Block (Content [ Text "E" , HardBreak ])) (Literal (Int 4)))
       ])
, ParBreak
]
--- evaluated ---
{ [
], 
  [
], 
  grid(children: ([A], 
                  [B], 
                  [C], 
                  [D], 
                  grid(children: ([A], 
                                  [B], 
                                  { [C], 
                                    linebreak(), 
                                    [C], 
                                    linebreak(), 
                                    [C], 
                                    linebreak() }, 
                                  [D]), 
                       columns: 2), 
                  align(alignment: top, 
                        body: rect(body: align(alignment: right, 
                                               body: [LoL]), 
                                   fill: rgb(13%,61%,67%,100%), 
                                   inset: 0.0pt)), 
                  [rofl], 
                  { [E], 
                    linebreak(), 
                    [E], 
                    linebreak(), 
                    [E], 
                    linebreak(), 
                    [E], 
                    linebreak() }), 
       column-gutter: (0.0pt, 10%), 
       columns: (1.0fr, 
                 1.0fr, 
                 1.0fr, 
                 1.0fr), 
       row-gutter: 10.0pt), 
  parbreak() }
--- pandoc ---
Pandoc
  Meta { unMeta = fromList [] }
  [ Para []
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "A" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "B" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "C" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "D" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Table
                      ( "" , [] , [] )
                      (Caption Nothing [])
                      [ ( AlignDefault , ColWidthDefault )
                      , ( AlignDefault , ColWidthDefault )
                      ]
                      (TableHead ( "" , [] , [] ) [])
                      [ TableBody
                          ( "" , [] , [] )
                          (RowHeadColumns 0)
                          []
                          [ Row
                              ( "" , [] , [] )
                              [ Cell
                                  ( "" , [] , [] )
                                  AlignDefault
                                  (RowSpan 1)
                                  (ColSpan 1)
                                  [ Para [ Str "A" ] ]
                              , Cell
                                  ( "" , [] , [] )
                                  AlignDefault
                                  (RowSpan 1)
                                  (ColSpan 1)
                                  [ Para [ Str "B" ] ]
                              ]
                          , Row
                              ( "" , [] , [] )
                              [ Cell
                                  ( "" , [] , [] )
                                  AlignDefault
                                  (RowSpan 1)
                                  (ColSpan 1)
                                  [ Para
                                      [ Str "C"
                                      , LineBreak
                                      , Str "C"
                                      , LineBreak
                                      , Str "C"
                                      , LineBreak
                                      ]
                                  ]
                              , Cell
                                  ( "" , [] , [] )
                                  AlignDefault
                                  (RowSpan 1)
                                  (ColSpan 1)
                                  [ Para [ Str "D" ] ]
                              ]
                          ]
                      ]
                      (TableFoot ( "" , [] , [] ) [])
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Div
                      ( "" , [] , [ ( "align" , "top" ) ] )
                      [ Div
                          ( "" , [ "rect" ] , [] )
                          [ Div
                              ( "" , [] , [ ( "align" , "right" ) ] ) [ Para [ Str "LoL" ] ]
                          ]
                      ]
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "rofl" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para
                      [ Str "E"
                      , LineBreak
                      , Str "E"
                      , LineBreak
                      , Str "E"
                      , LineBreak
                      , Str "E"
                      , LineBreak
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  ]
